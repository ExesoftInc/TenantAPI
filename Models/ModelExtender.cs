// ----------------------------------------------------------------------------------
// <copyright company="Exesoft Inc.">
//	This code was generated by Instant Web API code automation software (https://www.InstantWebAPI.com)
//	Copyright Exesoft Inc. Â© 2019.  All rights reserved.
// </copyright>
// ----------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using TenantAPI.Entities;
using TenantAPI.Models;

namespace TenantAPI.Entities {
    
    
    public static class ModelExtender {
        
        public static Address ToEntity(this AddressModel model) {

            Address entity = new Address();
            if (model.Id.Equals(Guid.Empty)) {
                entity.Id = Guid.NewGuid();
            }
            else {
                entity.Id = model.Id;
            }
            entity.UserId = model.UserId;
            entity.AddressTypeId = model.AddressTypeId;
            entity.StateId = model.StateId;
            entity.AddressLine1 = model.AddressLine1;
            entity.AddressLine2 = model.AddressLine2;
            entity.City = model.City;
            entity.PostalCode = model.PostalCode;
            entity.IsDefault = model.IsDefault;
            entity.CreatedBy = model.CreatedBy;
            entity.CreatedDate = model.CreatedDate;
            entity.UpdatedBy = model.UpdatedBy;
            entity.UpdatedDate = model.UpdatedDate;

            return entity;
        }
        
        public static Address ToEntity(this AddressModel model, Address entity) {

            entity.UserId = model.UserId;
            entity.AddressTypeId = model.AddressTypeId;
            entity.StateId = model.StateId;
            entity.AddressLine1 = model.AddressLine1;
            entity.AddressLine2 = model.AddressLine2;
            entity.City = model.City;
            entity.PostalCode = model.PostalCode;
            entity.IsDefault = model.IsDefault;
            entity.CreatedBy = model.CreatedBy;
            entity.CreatedDate = model.CreatedDate;
            entity.UpdatedBy = model.UpdatedBy;
            entity.UpdatedDate = model.UpdatedDate;

            return entity;
        }
        
        public static AddressType ToEntity(this AddressTypeModel model) {

            AddressType entity = new AddressType();
            entity.Id = model.Id;
            entity.Type = model.Type;

            return entity;
        }
        
        public static AddressType ToEntity(this AddressTypeModel model, AddressType entity) {

            entity.Type = model.Type;

            return entity;
        }
        
        public static AuthProvider ToEntity(this AuthProviderModel model) {

            AuthProvider entity = new AuthProvider();
            entity.Name = model.Name;
            entity.ClientId = model.ClientId;
            entity.ClientSecret = model.ClientSecret;
            entity.ClientEmail = model.ClientEmail;

            return entity;
        }
        
        public static AuthProvider ToEntity(this AuthProviderModel model, AuthProvider entity) {

            entity.ClientId = model.ClientId;
            entity.ClientSecret = model.ClientSecret;
            entity.ClientEmail = model.ClientEmail;

            return entity;
        }
        
        public static Info ToEntity(this InfoModel model) {

            Info entity = new Info();
            entity.Id = model.Id;
            entity.Type = model.Type;
            entity.Url = model.Url;
            entity.Username = model.Username;
            entity.Password = model.Password;

            return entity;
        }
        
        public static Info ToEntity(this InfoModel model, Info entity) {

            entity.Type = model.Type;
            entity.Url = model.Url;
            entity.Username = model.Username;
            entity.Password = model.Password;

            return entity;
        }
        
        public static Role ToEntity(this RoleModel model) {

            Role entity = new Role();
            entity.Id = model.Id;
            entity.Name = model.Name;
            entity.Description = model.Description;
            entity.IsActive = model.IsActive;

            return entity;
        }
        
        public static Role ToEntity(this RoleModel model, Role entity) {

            entity.Name = model.Name;
            entity.Description = model.Description;
            entity.IsActive = model.IsActive;

            return entity;
        }
        
        public static State ToEntity(this StateModel model) {

            State entity = new State();
            entity.Id = model.Id;
            entity.Abbreviation = model.Abbreviation;
            entity.Name = model.Name;

            return entity;
        }
        
        public static State ToEntity(this StateModel model, State entity) {

            entity.Abbreviation = model.Abbreviation;
            entity.Name = model.Name;

            return entity;
        }
        
        public static Tenant ToEntity(this TenantModel model) {

            Tenant entity = new Tenant();
            if (model.Id.Equals(Guid.Empty)) {
                entity.Id = Guid.NewGuid();
            }
            else {
                entity.Id = model.Id;
            }
            entity.CompanyName = model.CompanyName;
            entity.Website = model.Website;
            entity.DatabaseName = model.DatabaseName;
            entity.DataSource = model.DataSource;
            entity.UserId = model.UserId;
            entity.Password = model.Password;

            return entity;
        }
        
        public static Tenant ToEntity(this TenantModel model, Tenant entity) {

            entity.CompanyName = model.CompanyName;
            entity.Website = model.Website;
            entity.DatabaseName = model.DatabaseName;
            entity.DataSource = model.DataSource;
            entity.UserId = model.UserId;
            entity.Password = model.Password;

            return entity;
        }
        
        public static User ToEntity(this UserModel model) {

            User entity = new User();
            entity.Id = model.Id;
            entity.TenantId = model.TenantId;
            entity.AuthProvider = model.AuthProvider;
            entity.TitleId = model.TitleId;
            entity.FirstName = model.FirstName;
            entity.LastName = model.LastName;
            entity.Email = model.Email;
            entity.EmailConfirmed = model.EmailConfirmed;
            entity.PhoneNumber = model.PhoneNumber;
            entity.LockoutEnabled = model.LockoutEnabled;
            entity.AccessFailedCount = model.AccessFailedCount;
            entity.LockoutEnd = model.LockoutEnd;
            entity.Token = model.Token;
            entity.TokenDate = model.TokenDate;
            entity.CreatedDate = model.CreatedDate;
            entity.LastLoginDate = model.LastLoginDate;

            return entity;
        }
        
        public static User ToEntity(this UserModel model, User entity) {

            entity.TitleId = model.TitleId;
            entity.FirstName = model.FirstName;
            entity.LastName = model.LastName;
            entity.PhoneNumber = model.PhoneNumber;


            return entity;
        }
        
        public static UserRole ToEntity(this UserRoleModel model) {

            UserRole entity = new UserRole();
            entity.RoleId = model.RoleId;
            entity.UserId = model.UserId;

            return entity;
        }
        
        public static UserRole ToEntity(this UserRoleModel model, UserRole entity) {


            return entity;
        }
        
        public static UserTitle ToEntity(this UserTitleModel model) {

            UserTitle entity = new UserTitle();
            entity.TitleId = model.TitleId;
            entity.Abbreviation = model.Abbreviation;
            entity.Description = model.Description;

            return entity;
        }
        
        public static UserTitle ToEntity(this UserTitleModel model, UserTitle entity) {

            entity.Abbreviation = model.Abbreviation;
            entity.Description = model.Description;

            return entity;
        }
    }
}

