// ----------------------------------------------------------------------------------
// <copyright company="Exesoft Inc.">
//	This code was generated by Instant Web API code automation software (https://www.InstantWebAPI.com)
//	Copyright Exesoft Inc. Â© 2019.  All rights reserved.
// </copyright>
// ----------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using TenantAPI.Entities;
using TenantAPI.Models;

namespace TenantAPI.Models
{


    public class UserModel
    {

        protected internal string _id;

        protected internal System.Guid _tenantId;

        protected internal string _authProvider;

        protected internal int? _titleId;

        protected internal string _titleAbbrev = string.Empty;

        protected internal string _firstName;

        protected internal string _lastName;

        protected internal string _email;

        protected internal bool _emailConfirmed;

        protected internal string _phoneNumber;

        protected internal string _passwordHash;

        protected internal string _passwordSalt;

        protected internal System.DateTimeOffset? _lockoutEnd;

        protected internal bool _lockoutEnabled;

        protected internal int _accessFailedCount;

        protected internal string _token;

        protected internal System.DateTime? _tokenDate;

        protected internal System.DateTime _createdDate;

        protected internal System.DateTime? _updateDate;

        protected internal System.DateTime? _lastLoginDate;

        protected internal string[] _role;

        public UserModel()
        {
        }

        internal UserModel(User entity)
        {
            this._id = entity.Id;
            this._tenantId = entity.TenantId;
            this._authProvider = entity.AuthProvider;
            this._titleId = entity.TitleId;
            this._firstName = entity.FirstName;
            this._lastName = entity.LastName;
            this._email = entity.Email;
            this._phoneNumber = entity.PhoneNumber;
            this._passwordHash = entity.PasswordHash;
            this._lockoutEnd = entity.LockoutEnd;
            this._lockoutEnabled = entity.LockoutEnabled;
            this._accessFailedCount = entity.AccessFailedCount;
            this._token = entity.Token;
            this._tokenDate = entity.TokenDate;
            this._createdDate = entity.CreatedDate;
            this._updateDate = entity.UpdateDate;
            this._lastLoginDate = entity.LastLoginDate;
        }

        [Required()]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Id")]
        public string Id
        {
            get
            {
                return this._id;
            }
            set
            {
                this._id = value;
            }
        }

        [Required()]
        [Display(Name = "Tenant ID")]
        public System.Guid TenantId
        {
            get
            {
                return this._tenantId;
            }
            set
            {
                this._tenantId = value;
            }
        }


        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Auth provider")]
        public string AuthProvider
        {
            get
            {
                return this._authProvider;
            }
            set
            {
                this._authProvider = value;
            }
        }

        [Display(Name = "Title ID")]
        public int? TitleId
        {
            get
            {
                return this._titleId;
            }
            set
            {
                this._titleId = value;
            }
        }

        public string TitleAbbrev
        {
            get { return _titleAbbrev; }
            internal set { _titleAbbrev = value; }
        }

        [Required()]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "First name")]
        public string FirstName
        {
            get
            {
                return this._firstName;
            }
            set
            {
                this._firstName = value;
            }
        }

        [Required()]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Last name")]
        public string LastName
        {
            get
            {
                return this._lastName;
            }
            set
            {
                this._lastName = value;
            }
        }

        public string FullName
        {
            get
            {
                string titleAbbrev = TitleAbbrev.Length > 0 ? TitleAbbrev : "";
                string firstName = FirstName.Length > 0 ? FirstName : "";
                string lastName = LastName.Length > 0 ? LastName : "";

                if (titleAbbrev.Length > 0)
                    return titleAbbrev + " " + firstName + " " + lastName;
                else
                    return firstName + " " + lastName;
            }
        }

        [Required()]
        [MaxLength(256)]
        [StringLength(256)]
        [EmailAddress()]
        [Display(Name = "Email")]
        public string Email
        {
            get
            {
                return this._email;
            }
            set
            {
                this._email = value;
            }
        }

        [Display(Name = "Email confirmed")]
        public bool EmailConfirmed
        {
            get
            {
                return this._emailConfirmed;
            }
            set
            {
                this._emailConfirmed = value;
            }
        }

        [MaxLength(50)]
        [StringLength(50)]
        [Phone()]
        [Display(Name = "Phone number")]
        public string PhoneNumber
        {
            get
            {
                return this._phoneNumber;
            }
            set
            {
                this._phoneNumber = value;
            }
        }

        [DataType(DataType.DateTime)]
        [Display(Name = "Lockout end")]
        public System.DateTimeOffset? LockoutEnd
        {
            get
            {
                return this._lockoutEnd;
            }
            set
            {
                this._lockoutEnd = value;
            }
        }

        [Display(Name = "Lockout enabled")]
        public bool LockoutEnabled
        {
            get
            {
                return this._lockoutEnabled;
            }
            set
            {
                this._lockoutEnabled = value;
            }
        }

        [Display(Name = "Access failed count")]
        public int AccessFailedCount
        {
            get
            {
                return this._accessFailedCount;
            }
            set
            {
                this._accessFailedCount = value;
            }
        }

        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Token")]
        public string Token
        {
            get
            {
                return this._token;
            }
            set
            {
                this._token = value;
            }
        }

        [DataType(DataType.DateTime)]
        [Display(Name = "Token date")]
        public System.DateTime? TokenDate
        {
            get
            {
                return this._tokenDate;
            }
            set
            {
                this._tokenDate = value;
            }
        }

        [Required()]
        [DataType(DataType.DateTime)]
        [Display(Name = "Created date")]
        public System.DateTime CreatedDate
        {
            get
            {
                return this._createdDate;
            }
            set
            {
                this._createdDate = value;
            }
        }


        [DataType(DataType.DateTime)]
        [Display(Name = "Last login date")]
        public System.DateTime? LastLoginDate
        {
            get
            {
                return this._lastLoginDate;
            }
            set
            {
                this._lastLoginDate = value;
            }
        }

        public string[] Role
        {
            get { return _role; }
            internal set { _role = value; }
        }

        /// Child Addresses where [Address].[UserId] point to this entity (FK_Address_User)
        public virtual ICollection<AddressModel> AddressesModel { get; set; } = new HashSet<AddressModel>();

        /// Child UserRoles where [UserRole].[UserId] point to this entity (FK_UserRole_User)
        public virtual ICollection<UserRoleModel> UserRolesModel { get; set; } = new HashSet<UserRoleModel>();

        public override int GetHashCode()
        {
            int hash = 0;
            hash ^= Id.GetHashCode();
            return hash;
        }

        public override string ToString()
        {
            return Id
;
        }

        public override bool Equals(object obj)
        {
            bool result = false;

            if (obj is UserModel)
            {
                UserModel toCompare = (UserModel)obj;
                if (toCompare != null)
                {
                    result = Equals(toCompare);
                }
            }

            return result;
        }

        public virtual bool Equals(UserModel toCompare)
        {

            bool result = false;

            if (toCompare != null)
            {
                result = string.Compare(toCompare.Id, Id, true) == 0
;
            }

            return result;
        }
    }
}

