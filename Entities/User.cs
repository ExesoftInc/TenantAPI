// ----------------------------------------------------------------------------------
// <copyright company="Exesoft Inc.">
//	This code was generated by Instant Web API code automation software (https://www.InstantWebAPI.com)
//	Copyright Exesoft Inc. Â© 2019.  All rights reserved.
// </copyright>
// ----------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace TenantAPI.Entities {
    
    
    public partial class User {
        
        [Key()]
        [Display(Name = "Id")]
        public string Id { get; set; }
        
        [Display(Name = "Tenant ID")]
        public System.Guid TenantId { get; set; }
        
        [Display(Name = "Auth provider")]
        public string AuthProvider { get; set; }
        
        [Display(Name = "Title ID")]
        public System.Int32? TitleId { get; set; }
        
        [Display(Name = "First name")]
        public string FirstName { get; set; }
        
        [Display(Name = "Last name")]
        public string LastName { get; set; }
        
        [Display(Name = "Email")]
        public string Email { get; set; }
        
        [Display(Name = "Email confirmed")]
        public bool EmailConfirmed { get; set; }
        
        [Display(Name = "Phone number")]
        public string PhoneNumber { get; set; }
        
        [Display(Name = "Password hash")]
        public string PasswordHash { get; set; }
        
        [Display(Name = "Lockout enabled")]
        public bool LockoutEnabled { get; set; }
        
        [Display(Name = "Access failed count")]
        public int AccessFailedCount { get; set; }
        
        [Display(Name = "Lockout end")]
        public System.DateTimeOffset? LockoutEnd { get; set; }
        
        [Display(Name = "Token")]
        public string Token { get; set; }
        
        [Display(Name = "Token date")]
        public System.DateTime? TokenDate { get; set; }
        
        [Display(Name = "Created date")]
        public System.DateTime CreatedDate { get; set; }
        
        [Display(Name = "Update date")]
        public System.DateTime? UpdateDate { get; set; }
        
        [Display(Name = "Last login date")]
        public System.DateTime? LastLoginDate { get; set; }
        
        /// Child UserRoles where [UserRole].[UserId] point to this entity (FK_UserRole_User)
        public virtual ICollection<UserRole> UserRoles { get; set; } = new HashSet<UserRole>();
        
        // Parent Tenant pointed by [User].([TenantId]) (FK_User_Tenant)
        public virtual Tenant Tenant { get; set; }
        
        // Parent AuthProvider pointed by [User].([AuthProvider]) (FK_User_AuthProvider)
        public virtual AuthProvider AuthProvider_AuthProvider { get; set; }
        
        // Parent UserTitle pointed by [User].([TitleId]) (FK_User_UserTitle)
        public virtual UserTitle UserTitle { get; set; }
    }
}

